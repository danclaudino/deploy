<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developer Guide on AIDE-QC</title><link>https://aide-qc.github.io/deploy/developers/</link><description>Recent content in Developer Guide on AIDE-QC</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 29 Nov 2019 15:26:15 +0000</lastBuildDate><atom:link href="https://aide-qc.github.io/deploy/developers/index.xml" rel="self" type="application/rss+xml"/><item><title>Implement a new Optimizer</title><link>https://aide-qc.github.io/deploy/developers/implement_optimizer/</link><pubDate>Fri, 29 Nov 2019 15:26:15 +0000</pubDate><guid>https://aide-qc.github.io/deploy/developers/implement_optimizer/</guid><description>Background The AIDE-QC software stack provides an extension point for classical, multi-variate function optimization. This provides the means to experiment with multiple optimization strategies pertinent to variational quantum computing algorithms (e.g. VQE).
We describe optimization via an extensible Optimizer class. The essential structure of the Optimizer infrastructure is shown below
// Identifiable, exposes a name and a description class Identifiable { public: virtual const std::string name() const = 0; const std::string description() const = 0; }; // Useful typedef for Functors that can be optimized using OptimizerFunctor = std::function&amp;lt;double(const std::vector&amp;lt;double&amp;gt; &amp;amp;, std::vector&amp;lt;double&amp;gt; &amp;amp;)&amp;gt;; // OptFunction class OptFunction { public: OptFunction(OptimizerFunctor&amp;amp;, const int n_dim); const int dimensions() const; virtual double operator()(const std::vector&amp;lt;double&amp;gt; &amp;amp;x, std::vector&amp;lt;double&amp;gt; &amp;amp;dx); }; class Optimizer : public Identifiable { public: virtual OptResult optimize(OptFunction &amp;amp; function) = 0 }; First, we consider functions that can be optimized to be of a specific structure.</description></item></channel></rss>